{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\nconst dateTimePicker = flatpickr(\"#datetime-picker\", options);\nconst startButton = document.querySelector('[data-start]');\nconst timerValues = document.querySelectorAll('.value');\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n\nfunction updateTimerDisplay(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n\n  timerValues[0].textContent = addLeadingZero(days);\n  timerValues[1].textContent = addLeadingZero(hours);\n  timerValues[2].textContent = addLeadingZero(minutes);\n  timerValues[3].textContent = addLeadingZero(seconds);\n}\n\nstartButton.addEventListener('click', () => {\n  const selectedDate = dateTimePicker.selectedDates[0];\n  const currentDate = new Date();\n\n\n  if (selectedDate <= currentDate) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please choose a date in the future',\n    });\n    return;\n  }\n\n\n  startButton.disabled = true;\n\n\n  const timeDiff = selectedDate.getTime() - currentDate.getTime();\n\n  const countdownInterval = setInterval(() => {\n    updateTimerDisplay(timeDiff);\n\n    if (timeDiff <= 0) {\n      clearInterval(countdownInterval);\n      iziToast.success({\n        title: 'Success',\n        message: 'Countdown completed!',\n      });\n    }\n\n    timeDiff -= 1000; // віднімаємо 1 секунду\n  }, 1000);\n});\n"],"names":["options","selectedDates","startButton","dateTimePicker","flatpickr","timerValues","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","updateTimerDisplay","selectedDate","currentDate","timeDiff","countdownInterval"],"mappings":"oGAKA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACIA,EAAc,IAEf,IAAI,MAC1B,SAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EAEDC,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,EAEMC,EAAiBC,EAAU,mBAAoBJ,CAAO,EACtDE,EAAc,SAAS,cAAc,cAAc,EACnDG,EAAc,SAAS,iBAAiB,QAAQ,EAEtD,SAASC,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,SAASC,EAAmBL,EAAI,CAC9B,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUC,CAAE,EAEtDJ,EAAY,GAAG,YAAcC,EAAeI,CAAI,EAChDL,EAAY,GAAG,YAAcC,EAAeK,CAAK,EACjDN,EAAY,GAAG,YAAcC,EAAeM,CAAO,EACnDP,EAAY,GAAG,YAAcC,EAAeO,CAAO,CACrD,CAEAX,EAAY,iBAAiB,QAAS,IAAM,CAC1C,MAAMa,EAAeZ,EAAe,cAAc,GAC5Ca,EAAc,IAAI,KAGxB,GAAID,GAAgBC,EAAa,CAC/B,SAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACf,CAAK,EACD,MACD,CAGDd,EAAY,SAAW,GAGvB,MAAMe,EAAWF,EAAa,QAAS,EAAGC,EAAY,QAAO,EAEvDE,EAAoB,YAAY,IAAM,CAC1CJ,EAAmBG,CAAQ,EAEvBA,GAAY,IACd,cAAcC,CAAiB,EAC/B,SAAS,QAAQ,CACf,MAAO,UACP,QAAS,sBACjB,CAAO,GAGHD,GAAY,GACb,EAAE,GAAI,CACT,CAAC"}